pmm_server:
  values:
    persistence:
      size: 100Gi
    resources:
      requests:
        memory: 4Gi
        cpu: 1
    virtualServices:
      gateway: "{{ ingress_gateway }}"
      namespace: "{{ k8s_namespace }}"
      pmm:
        hostname: "pmm.{{ ingress_vhost }}"

pxc_database:
  values:
    proxysql:
      size: 2
    virtualServices:
      gateway: "{{ ingress_gateway }}"
      namespace: "{{ k8s_namespace }}"
      pxcProxy:
        hostname: "mysql.{{ ingress_vhost }}"
        matchPortNumber: "{{ pxc_port }}"

ne_init:
  values:
    image:
      repository: "harbor.nexr.kr/{{ ne_context.image_project }}/ne-init"
      pullPolicy: "{{ ne_context.image_pullPolicy }}"
      tag: "{{ ne_version }}{{ '-' ~ ne_context.image_build_num if ne_context.image_build_num is defined and ne_context.image_build_num|length else '' }}"
    envOverrides:
      S3_ENDPOINT: "{{ s3.endpoint }}"
      S3_BUCKET: "{{ s3.bucket }}"
      S3_ACCESSKEY: "{{ s3.accesskey }}"
      S3_SECRETKEY: "{{ s3.secretkey }}"
      MYSQL_SERVER: pxc-database-proxysql
      MYSQL_PORT: 3306
      NEXUS_HOST: nexus
      HOST_REPO_NAME: nexr-host
      GROUP_REPO_NAME: nexr-maven
      NE_SCHEMA_VERSION: "{{ ne_schema_version }}"
      NE_NAMESPACE: "{{ k8s_namespace }}"
      CHART_REPO_NAME: "{{ chart_repo_name }}"
      DATALAKE_USER_HOST: "https://{{ user_subdomain }}.datalake.cloud.kt.com"
      ISTIO_SIDECAR_ENABLE: "false"

nexus:
  values:
    image:
      pullPolicy: "{{ ne_context.image_pullPolicy }}"

ne_depend:
  values:
    image:
      repository: "harbor.nexr.kr/{{ ne_context.image_project }}/ne-depend"
      pullPolicy: "{{ ne_context.image_pullPolicy }}"
      tag: "{{ ne_version }}{{ '-' ~ ne_context.image_build_num if ne_context.image_build_num is defined and ne_context.image_build_num|length else '' }}"
    resources:
      requests:
        memory: 5Gi
        cpu: 2000m

pinpoint:
  values:
    web:
      istio:
        gateways:
        - "{{ ingress_gateway }}"
        hosts:
          - "apm.{{ ingress_vhost }}"

ccs:
  values:
    image:
      repository: "harbor.nexr.kr/{{ ne_app.image_project }}/ccs-server-web"
      pullPolicy: "{{ ne_app.image_pullPolicy }}"
      tag: "{{ ne_version }}{{ '-' ~ ne_app.image_build_num if ne_app.image_build_num is defined and ne_app.image_build_num|length else '' }}"
    ne:
      pinpoint:
        enabled: true

cui:
  values:
    image:
      repository: "harbor.nexr.kr/{{ ne_ui.image_project }}/constantine-ui"
      pullPolicy: "{{ ne_ui.image_pullPolicy }}"
      tag: "{{ ne_version }}{{ '-' ~ ne_ui.image_build_num if ne_ui.image_build_num is defined and ne_ui.image_build_num|length else '' }}"

cgw:
  values:
    image:
      repository: "harbor.nexr.kr/{{ ne_app.image_project }}/cgw-server-web"
      pullPolicy: "{{ ne_app.image_pullPolicy }}"
      tag: "{{ ne_version }}{{ '-' ~ ne_app.image_build_num if ne_app.image_build_num is defined and ne_app.image_build_num|length else '' }}"
    ne:
      pinpoint:
        enabled: true
    istio:
      gateways:
      - "{{ ingress_gateway }}"
      hosts:
        - "ne.{{ ingress_vhost }}"

openldap:
  values:
    istio:
      sidecar:
        enabled: false
      gateways:
      - "{{ ingress_gateway }}"
      hosts:
        - "openldap.{{ ingress_vhost }}"

ranger_admin:
  values:
    istio:
      sidecar:
        enabled: false
      gateways:
      - "{{ ingress_gateway }}"
      hosts:
        - "ranger.{{ ingress_vhost }}"

ranger_usersync:
  values:
    istio:
      sidecar:
        enabled: false

a3s:
  values:
    image:
      repository: "harbor.nexr.kr/{{ ne_app.image_project }}/a3s-server-web"
      pullPolicy: "{{ ne_app.image_pullPolicy }}"
      tag: "{{ ne_version }}{{ '-' ~ ne_app.image_build_num if ne_app.image_build_num is defined and ne_app.image_build_num|length else '' }}"
    ne:
      pinpoint:
        enabled: true
        
prometheus:
  values:
    virtualServices:
      gateway: "{{ ingress_gateway }}"
      namespace: "{{ k8s_namespace }}"
      # for each pod
      prometheusServer:
        hostname: "prometheus.{{ ingress_vhost }}"
        enabled: true
        portNumber: 80
        prefix: /
      alertManager:
        hostname: "alertmanager.{{ ingress_vhost }}"
        enabled: true
        portNumber: 80
        prefix: /

grafana:
  values:
    virtualServices:
      gateway: "{{ ingress_gateway }}"
      namespace: "{{ k8s_namespace }}"
      grafana:
        hostname: "grafana.{{ ingress_vhost }}"
        enabled: true
        portNumber: 80
        prefix: /

zookeeper:
kafka:
elasticsearch:
hive_metastore:
  values:
    image.repository: harbor.nexr.kr/{{ oss.image_project }}/hivemetastore
    image.tag: 2.3.5-2.9.2-{{ ne_version }}{{ '-' ~ oss.hive_metastore_build_num if oss.hive_metastore_build_num is defined and oss.hive_metastore_build_num|length else '' }}

spark_historyserver:
  values:
    image.repository: harbor.nexr.kr/{{ oss.image_project }}/spark
    image.tag: 2.4.3-NR-{{ ne_version }}{{ '-' ~ oss.spark_build_num if oss.spark_build_num is defined and oss.spark_build_num|length else '' }}
    istio.gateways[0]: {{ ingress_gateway }}
    istio.hosts[0]: sparkhistory.{{ ingress_vhost }}
  spark-default.conf:
    spark.kubernetes.container.image: harbor.nexr.kr/{{ oss.image_project }}/spark:2.4.3-NR

spark_thriftserver:
  values:
    image.repository: harbor.nexr.kr/{{ oss.image_project }}/spark
    image.tag: 2.4.3-NR-{{ ne_version }}{{ '-' ~ oss.spark_build_num if oss.spark_build_num is defined and oss.spark_build_num|length else '' }}
    replicaCount: 3
  spark-default.conf:
    spark.kubernetes.container.image: harbor.nexr.kr/{{ oss.image_project }}/spark:2.4.3-NR

zeppelin:
  values:
    sparkImage.repository: harbor.nexr.kr/{{ oss.image_project }}/spark
    sparkImage.tag: 2.4.3-NR-{{ ne_version }}{{ '-' ~ oss.spark_build_num if oss.spark_build_num is defined and oss.spark_build_num|length else '' }}

conductor:
  values:
    server.jvmOpts: -Xms1024M -Xmx8192M -XX:-HeapDumpOnOutOfMemoryError
    server.resources.limits.memory: 10000Mi
    server.image.repository: harbor.nexr.kr/{{ oss.image_project }}/conductor
    server.image.tag: 2.22.1-NR-{{ ne_version }}
    ui.image.repository: harbor.nexr.kr/{{ oss.image_project }}/conductor-ui
    ui.image.tag: 2.22.1-NR-{{ ne_version }}
    istio.gateways[0]: {{ ingress_gateway }}
    istio.hosts[0]: conductor.{{ ingress_vhost }}

selenium:
  values:
    hub.javaOpts: -Xms1024M -Xmx4096M -XX:-HeapDumpOnOutOfMemoryError
    hub.resources.limits.memory: 5000Mi

ne_post:
  values:
    image.repository: "harbor.nexr.kr/{{ ne_context.image_project }}/ne-post"
    image.pullPolicy: "{{ ne_context.image_pullPolicy }}"
    image.tag: "{{ ne_version }}{{ '-' ~ ne_context.image_build_num if ne_context.image_build_num is defined and ne_context.image_build_num|length else '' }}"

eds:
  values:
    image.repository: "harbor.nexr.kr/{{ ne_app.image_project }}/eds-server-web"
    image.pullPolicy: "{{ ne_app.image_pullPolicy }}"
    image.tag: "{{ ne_version }}{{ '-' ~ ne_app.image_build_num if ne_app.image_build_num is defined and ne_app.image_build_num|length else '' }}"
    ne.pinpoint.enabled: "true"

cms:
  values:
    image.repository: "harbor.nexr.kr/{{ ne_app.image_project }}/cms-server-web"
    image.pullPolicy: "{{ ne_app.image_pullPolicy }}"
    image.tag: "{{ ne_version }}{{ '-' ~ ne_app.image_build_num if ne_app.image_build_num is defined and ne_app.image_build_num|length else '' }}"
    ne.pinpoint.enabled: "true"

des:
  values:
    image.repository: "harbor.nexr.kr/{{ ne_app.image_project }}/des-server-web"
    image.pullPolicy: "{{ ne_app.image_pullPolicy }}"
    image.tag: "{{ ne_version }}{{ '-' ~ ne_app.image_build_num if ne_app.image_build_num is defined and ne_app.image_build_num|length else '' }}"
    ne.pinpoint.enabled: "true"

dss:
  values:
    image.repository: "harbor.nexr.kr/{{ ne_app.image_project }}/dss-server-web"
    image.pullPolicy: "{{ ne_app.image_pullPolicy }}"
    image.tag: "{{ ne_version }}{{ '-' ~ ne_app.image_build_num if ne_app.image_build_num is defined and ne_app.image_build_num|length else '' }}"
    ne.pinpoint.enabled: "true"

dvs:
  values:
    image.repository: "harbor.nexr.kr/{{ ne_app.image_project }}/dvs-server-web"
    image.pullPolicy: "{{ ne_app.image_pullPolicy }}"
    image.tag: "{{ ne_version }}{{ '-' ~ ne_app.image_build_num if ne_app.image_build_num is defined and ne_app.image_build_num|length else '' }}"
    ne.pinpoint.enabled: "true"

logstash:
  values:
    istio.sidecar.enabled: "false"
