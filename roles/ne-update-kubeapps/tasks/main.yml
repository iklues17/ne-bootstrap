---
- name: Create variable - k8s kubeapps token
  shell: "{{ bin_dir }}/kubectl describe secret $(kubectl get secrets -n default | grep ^kubeapps-operator | cut -f1 -d ' ') -n default | grep -E '^token' | cut -f2 -d':' | tr -d ' '"
  environment:
    - KUBECONFIG: "{{ ansible_env.HOME | default('/root') }}/.kube/config"
  register: kubeapps_token_result

- name: Set fact variable - k8s kubeapps token
  set_fact:
    cacheable: yes
    kubeapps_token: "{{ kubeapps_token_result.stdout }}"

- name: Set ststs variable - k8s kubeapps token
  set_stats:
    data:
      kubeapps_token: "{{ kubeapps_token }}"

- name: Change Kubeapps rest api info
  uri:
    url: "{{ k8s_api_server }}/api/v1/namespaces/{{ k8s_namespace }}/services/ccs:8180/proxy/orchestrators/1"
    method: PUT
    body_format: json
    follow_redirects: all
    validate_certs: no
    timeout: "{{ ne_ccs_install_timeout }}"
    headers:
      Authorization: "Bearer {{ k8s_api_token }}"
      x-constantine-token: "{{ ne_accesstoken }}"
      content-type: application/json;charset=UTF-8
    body:
      endpoint: "http://kubeapps.kubeapps.svc.{{ k8s_cluster_name }}:80"
      namespace: "{{ k8s_namespace }}"
      title: "Kubernetes"
      token: "{{ kubeapps_token }}"
  register: orchestrator_response

- name: Get k8s AppRepository object
  community.kubernetes.k8s_info:
    api_version: v1
    kind: AppRepository
    namespace: "{{ k8s_namespace }}"
    name: "{{ chart_repo_name }}"
  register: check_apprepository_result

- name: Debug When AppRepository is not installed
  debug:
    var: check_apprepository_result

- name: Generate ne apprepository when is not existed
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: kubeapps.com/v1alpha1
      kind: AppRepository
      metadata:
        name: "{{ chart_repo_name }}"
        namespace: "{{ k8s_namespace }}"
      spec:
        auth: {}
        resyncRequests: 0
        syncJobPodTemplate:
          metadata:
            creationTimestamp: null
          spec:
            containers: null
        type: helm
        url: "{{ chart_repo_url }}"
  when:
    - check_apprepository_result.status is undefined or
      check_apprepository_result.status is defined and check_apprepository_result.status.status == 'failed'
    - check_apprepository_result.resources is undefined or
      check_apprepository_result.resources | length <= 0
