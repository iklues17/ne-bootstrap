---
- name: Create a k8s namespace for Nexr Enterprise
  community.kubernetes.k8s:
    state: present
    definition:
      kind: Namespace
      api_version: v1
      metadata:
        name: "{{ k8s_namespace }}"
        labels:
          app: nexr-enterprise
          istio-injection: disabled

- name: Add namespace default RBAC - role
  community.kubernetes.k8s:
    state: present
    namespace: "{{ k8s_namespace }}"
    definition: "{{ lookup('template', 'default_role.yml') | from_yaml }}"

- name: Add namespace default RBAC - rolebinding
  community.kubernetes.k8s:
    state: present
    namespace: "{{ k8s_namespace }}"
    definition: "{{ lookup('template', 'default_rolebinding.yml') | from_yaml }}"

- name: Create Bucket - NE User
  amazon.aws.s3_bucket:
    name: "{{ s3.bucket }}"
    s3_url: "http://{{ s3.endpoint }}"
    access_key: "{{ s3.accesskey }}"
    secret_key: "{{ s3.secretkey }}"
    ceph: true

- name: Create Spark log directory
  amazon.aws.aws_s3:
    bucket: "{{ s3.bucket }}"
    object: "/var/log/spark/hello"
    src: "/root/hello"
    mode: put
    encrypt: false
    rgw: true
    s3_url: "http://{{ s3.endpoint }}"
    access_key: "{{ s3.accesskey }}"
    secret_key: "{{ s3.secretkey }}"

- name: Create Bucket - ETCD Backup
  amazon.aws.s3_bucket:
    name: "{{ s3.backup_bucket }}"
    s3_url: "http://{{ s3.endpoint }}"
    access_key: "{{ s3.accesskey }}"
    secret_key: "{{ s3.secretkey }}"
    ceph: true

- name: Deploy pxc-operator chart
  community.kubernetes.helm:
    name: pxc-operator
    chart_ref: "{{ chart_repo_name }}/pxc-operator"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes

- name: Deploy pmm-server chart
  community.kubernetes.helm:
    name: pmm-server
    chart_ref: "{{ chart_repo_name }}/pmm-server"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    atomic: yes
    values:
      persistence:
        size: 100Gi
      resources:
        requests:
          memory: 4Gi
          cpu: 1
      virtualServices:
        pmm:
          hostname: "pmm.{{ ingress_vhost }}"

- name: Deploy pxc-database chart
  community.kubernetes.helm:
    name: pxc-database
    chart_ref: "{{ chart_repo_name }}/pxc-database"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values:
      proxysql:
        size: 2
      virtualServices:
        pxcProxy:
          hostname: "mysql.{{ ingress_vhost }}"
          matchPortNumber: "{{ pxc_port }}"

- name: Wait for pxc-database-pxc-2 pod running ready completely
  community.kubernetes.k8s_info:
    kind: Pod
    namespace: "{{ k8s_namespace }}"
    name: "pxc-database-pxc-2"
    wait: yes
    wait_condition:
      status: "True"
      type: "Ready"
  register: result
  until: "{{ result.resources|length == 1 }}"
  retries: 50
  delay: 10

- name: Deploy nexus chart
  community.kubernetes.helm:
    name: nexus
    chart_ref: "{{ chart_repo_name }}/nexus"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes

- name: Deploy ne-init chart
  community.kubernetes.helm:
    name: ne-init
    chart_ref: "{{ chart_repo_name }}/ne-init"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values:
      envOverrides:
        S3_ENDPOINT: "{{ s3.endpoint }}"
        S3_BUCKET: "{{ s3.bucket }}"
        S3_ACCESSKEY: "{{ s3.accesskey }}"
        S3_SECRETKEY: "{{ s3.secretkey }}"
        MYSQL_SERVER: pxc-database-proxysql
        MYSQL_PORT: 3306
        NEXUS_HOST: nexus
        HOST_REPO_NAME: nexr-host
        GROUP_REPO_NAME: nexr-maven
        NE_VERSION: "{{ ne.schema_version }}"
        NE_NAMESPACE: "{{ k8s_namespace }}"
        CHART_REPO_NAME: "{{ chart_repo_name }}"
        DATALAKE_USER_HOST: "https://{{ user_subdomain }}.datalake.cloud.kt.com"

- name: Deploy ne-depend chart
  community.kubernetes.helm:
    name: ne-depend
    chart_ref: "{{ chart_repo_name }}/ne-depend"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    atomic: yes
    values:
      resources:
        requests:
          memory: 5Gi
          cpu: 2000m
