k8s_namespace: ne

ne_ccs_install_timeout: 300

ingress_vhost: nexr.kr

ne_version: "1.3.1"

oss:
  image_build_num: ""
  image_project: nexr-enterprise
  image_pullPolicy: IfNotPresent
  spark_version: 2.4.3-NR
  spark_build_num: ""
  hive_metastore_version: 2.3.5-2.9.2
  hive_metastore_build_num: ""
  conductor_veresion: 2.22.1-NR-{{ ne_version }}
  conductor_build_num: ""
  zeppelin_version: 0.9.0-NR-{{ ne_version }}
  zeppelin_build_num: ""

zookeeper:
  values:
    persistence.storageClass: "{{ datalake_name }}-rook-ceph-block"
kafka:
  values:
    cpKafka.persistence.storageClass: "{{ datalake_name }}-rook-ceph-block"
elasticsearch:
  values:
    data.persistence.storageClass: "{{ datalake_name }}-rook-ceph-block"
    master.persistence.storageClass: "{{ datalake_name }}-rook-ceph-block"

hive_metastore:
  values:
    image.repository: harbor.nexr.kr/{{ oss.image_project }}/hivemetastore
    image.tag: "{{ oss.hive_metastore_version }}{{ '-' ~ oss.hive_metastore_build_num if oss.hive_metastore_build_num is defined and oss.hive_metastore_build_num|length else '' }}"

spark_historyserver:
  values:
    image.repository: harbor.nexr.kr/{{ oss.image_project }}/spark
    image.tag: "{{ oss.spark_version }}{{ '-' ~ oss.spark_build_num if oss.spark_build_num is defined and oss.spark_build_num|length else '' }}"
    istio.gateways[0]: "{{ ingress_gateway }}"
    istio.hosts[0]: sparkhistory.{{ ingress_vhost }}
  spark-default.conf:
    spark.kubernetes.container.image: harbor.nexr.kr/{{ oss.image_project }}/spark:{{ oss.spark_version }}{{ '-' ~ oss.spark_build_num if oss.spark_build_num is defined and oss.spark_build_num|length else '' }}

spark_thriftserver:
  values:
    image.repository: harbor.nexr.kr/{{ oss.image_project }}/spark
    image.tag: "{{ oss.spark_version }}{{ '-' ~ oss.spark_build_num if oss.spark_build_num is defined and oss.spark_build_num|length else '' }}"
    replicaCount: 3
  spark-default.conf:
    spark.kubernetes.container.image: harbor.nexr.kr/{{ oss.image_project }}/spark:{{ oss.spark_version }}{{ '-' ~ oss.spark_build_num if oss.spark_build_num is defined and oss.spark_build_num|length else '' }}
zeppelin:
  values:
    sparkImage.repository: harbor.nexr.kr/{{ oss.image_project }}/spark
    sparkImage.tag: "{{ oss.spark_version }}{{ '-' ~ oss.spark_build_num if oss.spark_build_num is defined and oss.spark_build_num|length else '' }}"
    zeppelinImage.repository: harbor.nexr.kr/{{ oss.image_project }}/zeppelin
    zeppelinImage.tag: "{{ oss.zeppelin_version }}{{ '-' ~ oss.zeppelin_build_num if oss.zeppelin_build_num is defined and oss.zeppelin_build_num|length else '' }}"

conductor:
  values:
    server.jvmOpts: -Xms1024M -Xmx8192M -XX:-HeapDumpOnOutOfMemoryError
    server.resources.limits.memory: 10000Mi
    server.image.repository: harbor.nexr.kr/{{ oss.image_project }}/conductor
    server.image.tag: "{{ oss.conductor_veresion }}{{ '-' ~ oss.conductor_build_num if oss.conductor_build_num is defined and oss.conductor_build_num|length else '' }}"
    ui.image.repository: harbor.nexr.kr/{{ oss.image_project }}/conductor-ui
    ui.image.tag: "{{ oss.conductor_veresion }}"
    istio.gateways[0]: "{{ ingress_gateway }}"
    istio.hosts[0]: conductor.{{ ingress_vhost }}

selenium:
  values:
    hub.javaOpts: -Xms1024M -Xmx4096M -XX:-HeapDumpOnOutOfMemoryError
    hub.resources.limits.memory: 5000Mi
