---
- name: Create a k8s namespace for Nexr Enterprise
  community.kubernetes.k8s:
    state: present
    definition:
      kind: Namespace
      api_version: v1
      metadata:
        name: "{{ k8s_namespace }}"
        labels:
          app: nexr-enterprise
          istio-injection: disabled

- name: Add namespace default RBAC - role
  community.kubernetes.k8s:
    state: present
    namespace: "{{ k8s_namespace }}"
    definition: "{{ lookup('template', 'manifest/default_role.yml') | from_yaml }}"

- name: Add namespace default RBAC - rolebinding
  community.kubernetes.k8s:
    state: present
    namespace: "{{ k8s_namespace }}"
    definition: "{{ lookup('template', 'manifest/default_rolebinding.yml') | from_yaml }}"

- name: Add NexR Enterprise chart repo
  community.kubernetes.helm_repository:
    name: "{{ chart_repo_name }}"
    state: present
    repo_url: "{{ chart_repo_url }}"

- name: Deploy pxc-operator chart
  community.kubernetes.helm:
    name: pxc-operator
    chart_ref: "{{ chart_repo_name }}/pxc-operator"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes

- name: Deploy pmm-server chart
  community.kubernetes.helm:
    name: pmm-server
    chart_ref: "{{ chart_repo_name }}/pmm-server"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    atomic: yes
    values:
      persistence:
        size: 100Gi
      resources:
        requests:
          memory: 4Gi
          cpu: 1
      virtualServices:
        pmm:
          hostname: "pmm.{{ ingress_vhost }}"

- name: Deploy pxc-database chart
  community.kubernetes.helm:
    name: pxc-database
    chart_ref: "{{ chart_repo_name }}/pxc-database"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values:
      proxysql:
        size: 2
      virtualServices:
        pxcProxy:
          hostname: "mysql.{{ ingress_vhost }}"
          matchPortNumber: "{{ pxc_port }}"

- name: Deploy nexus chart
  community.kubernetes.helm:
    name: nexus
    chart_ref: "{{ chart_repo_name }}/nexus"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes

- name: Deploy ne-init chart
  community.kubernetes.helm:
    name: ne-init
    chart_ref: "{{ chart_repo_name }}/ne-init"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values:
      envOverrides:
        S3_ENDPOINT: "{{ s3.endpoint }}"
        S3_BUCKET: "{{ s3.bucket }}"
        S3_ACCESSKEY: "{{ s3.accesskey }}"
        S3_SECRETKEY: "{{ s3.secretkey }}"
        MYSQL_SERVER: pxc-database-proxysql
        PROXYSQL_SERVER: pxc-database-proxysql-unready
        NEXUS_HOST: nexus
        NE_VERSION: "{{ ne.schemaVersion }}"

- name: Deploy ne-depend chart
  community.kubernetes.helm:
    name: ne-depend
    chart_ref: "{{ chart_repo_name }}/ne-depend"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    atomic: yes
    values:
      resources:
        requests:
          memory: 5Gi
          cpu: 2000m

- name: Deploy pinpoint chart
  community.kubernetes.helm:
    name: pinpoint
    chart_ref: "{{ chart_repo_name }}/pinpoint"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values:
      web:
        istio:
          hosts:
            - "apm.{{ ingress_vhost }}"

- name: Deploy ccs chart
  community.kubernetes.helm:
    name: ccs
    chart_ref: "{{ chart_repo_name }}/ccs"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values:
      ne:
        pinpoint:
          enabled: true

- name: Deploy cui chart
  community.kubernetes.helm:
    name: cui
    chart_ref: "{{ chart_repo_name }}/cui"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes

- name: Deploy cgw chart
  community.kubernetes.helm:
    name: cgw
    chart_ref: "{{ chart_repo_name }}/cgw"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    atomic: yes
    values:
      ne:
        pinpoint:
          enabled: true
      istio:
        hosts:
          - "ne.{{ ingress_vhost }}"

- name: Deploy openldap chart
  community.kubernetes.helm:
    name: openldap
    chart_ref: "{{ chart_repo_name }}/openldap"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    atomic: yes
    values:
      istio:
        sidecar:
          enabled: false
        hosts:
          - "openldap.{{ ingress_vhost }}"

- name: Deploy ranger-admin chart
  community.kubernetes.helm:
    name: ranger-admin
    chart_ref: "{{ chart_repo_name }}/ranger-admin"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values:
      istio:
        sidecar:
          enabled: false
        hosts:
          - "ranger.{{ ingress_vhost }}"

- name: Deploy ranger-usersync chart
  community.kubernetes.helm:
    name: ranger-usersync
    chart_ref: "{{ chart_repo_name }}/ranger-usersync"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    atomic: yes
    values:
      istio:
        sidecar:
          enabled: false

- name: Deploy a3s chart
  community.kubernetes.helm:
    name: a3s
    chart_ref: "{{ chart_repo_name }}/a3s"
    chart_version: "{{ ne.version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values:
      ne:
        pinpoint:
          enabled: true

