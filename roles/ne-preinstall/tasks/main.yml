---
- name: Check that the ldap directory file
  stat:
    path: "/home/centos/ne-outboundnetwork-traffic"
  register: trafficdir

- name: Create Directory ne-outboundnetwork-traffic
  file: path=/home/centos/ne-outboundnetwork-traffic state=directory mode=0755 recurse=yes
  when: not trafficdir.stat.exists


- name: Copy File to ne-ldap-templates
  template: src=roles/ne-preinstall/templates/{{ item }} dest=/home/centos/ne-outboundnetwork-traffic
  with_items:
  - deployment_cgw_initcontainer.json
  - deployment_cgw_iptables_exporter.json
  - deployment_cgw.json
  - deployment_cgw_nginx.json
  when: not trafficdir.stat.exists

- name: Deploy pinpoint chart
  community.kubernetes.helm:
    name: pinpoint
    chart_ref: "{{ chart_repo_name }}/pinpoint"
    chart_version: "{{ ne_version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values: "{{  pinpoint['values'] | from_yaml }}"

- name: Check release pinpoint
  community.kubernetes.helm_info:
    name: pinpoint
    release_namespace: "{{ k8s_namespace }}"
  register: result
  until: "{{ result.status.status == 'deployed' }}"
  retries: 10
  delay: 10

- name: Deploy ccs chart
  community.kubernetes.helm:
    name: ccs
    chart_ref: "{{ chart_repo_name }}/ccs"
    chart_version: "{{ ne_version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values: "{{  ccs['values'] | from_yaml }}"

- name: Deploy cui chart
  community.kubernetes.helm:
    name: cui
    chart_ref: "{{ chart_repo_name }}/cui"
    chart_version: "{{ ne_version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values: "{{  cui['values'] | from_yaml }}"

- name: Deploy cgw chart
  community.kubernetes.helm:
    name: cgw
    chart_ref: "{{ chart_repo_name }}/cgw"
    chart_version: "{{ ne_version }}"
    release_namespace: "{{ k8s_namespace }}"
    atomic: yes
    values: "{{  cgw['values'] | from_yaml }}"

- name: First Step for Patching Deployemnt ApiSpec for Collecting Metric (initContainer)
  shell: kubectl patch deployments.apps -n {{ datalake_name }} cgw --type='json' --patch-file '/home/centos/ne-outboundnetwork-traffic/deployment_cgw_initcontainer.json'

- name: Second Step for Patching Deployemnt ApiSpec for Collecting Metric (nginx)
  shell: kubectl patch deployments.apps -n {{ datalake_name }} cgw --type='json' --patch-file '/home/centos/ne-outboundnetwork-traffic/deployment_cgw_nginx.json'

- name: Thired Step for Patching Deployemnt ApiSpec for Collecting Metric (iptables_exporter)
  shell: kubectl patch deployments.apps -n {{ datalake_name }} cgw --type='json' --patch-file '/home/centos/ne-outboundnetwork-traffic/deployment_cgw_iptables_exporter.json'

- name: Restart Deployment for New ApiSpec Pod
  shell: kubectl rollout restart deployment/cgw -n {{ datalake_name }}

- name: Deploy openldap chart
  community.kubernetes.helm:
    name: openldap
    chart_ref: "{{ chart_repo_name }}/openldap"
    chart_version: "{{ ne_version }}"
    release_namespace: "{{ k8s_namespace }}"
    atomic: yes
    values: "{{  openldap['values'] | from_yaml }}"


- name: Deploy ranger-admin chart
  community.kubernetes.helm:
    name: ranger-admin
    chart_ref: "{{ chart_repo_name }}/ranger-admin"
    chart_version: "{{ ne_version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values: "{{  ranger_admin['values'] | from_yaml }}"

- name: Deploy ranger-usersync chart
  community.kubernetes.helm:
    name: ranger-usersync
    chart_ref: "{{ chart_repo_name }}/ranger-usersync"
    chart_version: "{{ ne_version }}"
    release_namespace: "{{ k8s_namespace }}"
    atomic: yes
    values: "{{  ranger_usersync['values'] | from_yaml }}"

- name: Deploy a3s chart
  community.kubernetes.helm:
    name: a3s
    chart_ref: "{{ chart_repo_name }}/a3s"
    chart_version: "{{ ne_version }}"
    release_namespace: "{{ k8s_namespace }}"
    wait: yes
    atomic: yes
    values: "{{  a3s['values'] | from_yaml }}"
