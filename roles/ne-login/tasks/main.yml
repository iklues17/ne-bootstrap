---
- name: Regist NexR Enterprise license
  uri:
    url: "{{ k8s_api_server }}/api/v1/namespaces/{{ k8s_namespace }}/services/ccs:8180/proxy/licenses/constantine"
    method: POST
    body_format: json
    follow_redirects: all
    validate_certs: no
    timeout: "{{ ne_ccs_install_timeout }}"
    headers:
      Authorization: "Bearer {{ k8s_api_token }}"
    body:
      licenseKey: "{{ ne.licensekey }}"
      siteName: "{{ ne.sitename }}"

- name: Login NexR Enterprise
  uri:
    url: "{{ k8s_api_server }}/api/v1/namespaces/{{ k8s_namespace }}/services/a3s:8189/proxy/auth/login"
    method: POST
    body_format: json
    follow_redirects: all
    validate_certs: no
    timeout: "{{ ne_ccs_install_timeout }}"
    headers:
      Authorization: "Bearer {{ k8s_api_token }}"
    body:
      userId: "{{ ne_admin_username }}"
      userPassword: "{{ ne_admin_password }}"
  register: login_response

- debug:
    var: login_response

- name: Set ststs variable - NexR Enterprise accesstoken
  set_stats:
    data:
      ne_accesstoken: "{{ login_response.json.body.accessToken }}"
      ne_refreshtoken: "{{ login_response.json.body.refreshToken }}"

- name: Set variable - NexR Enterprise accesstoken
  set_fact:
    cacheable: yes
    ne_accesstoken: "{{ login_response.json.body.accessToken }}"
    ne_refreshtoken: "{{ login_response.json.body.refreshToken }}"

- name: Create variable - k8s kubeapps token
  shell: "{{ bin_dir }}/kubectl describe secret $(kubectl get secrets -n default | grep ^kubeapps-operator | cut -f1 -d ' ') -n default | grep -E '^token' | cut -f2 -d':' | tr -d ' '"
  environment:
    - KUBECONFIG: "{{ ansible_env.HOME | default('/root') }}/.kube/config"
  register: kubeapps_token

- name: Set ststs variable - k8s kubeapps token
  set_stats:
    data:
      kubeapps_token: "{{ kubeapps_token.stdout }}"

- name: Set variable - k8s kubeapps token
  set_fact:
    cacheable: yes
    kubeapps_token: "{{ kubeapps_token.stdout }}"

- name: Change Kubeapps rest api info
  uri:
    url: "{{ k8s_api_server }}/api/v1/namespaces/{{ k8s_namespace }}/services/ccs:8180/proxy/orchestrators/1"
    method: PUT
    body_format: json
    follow_redirects: all
    validate_certs: no
    timeout: "{{ ne_ccs_install_timeout }}"
    headers:
      Authorization: "Bearer {{ k8s_api_token }}"
      x-constantine-token: "{{ ne_accesstoken }}"
      content-type: application/json;charset=UTF-8
    body:
      endpoint: "http://kubeapps.kubeapps.svc.{{ k8s_cluster_name }}:80"
      namespace: "{{ k8s_namespace }}"
      title: "Kubernetes"
      token: "{{ kubeapps_token }}"
  register: orchestrator_response

- debug:
    var: orchestrator_response
